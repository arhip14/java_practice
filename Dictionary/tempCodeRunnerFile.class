// Source code is decompiled from a .class file using FernFlower decompiler (from Intellij IDEA).
class Dictionary {
   private String[] words;

   public Dictionary(String[] var1) {
      this.words = var1;
   }

   public String findMostSimilar(String var1) {
      String var2 = null;
      int var3 = Integer.MAX_VALUE;
      String[] var4 = this.words;
      int var5 = var4.length;

      for(int var6 = 0; var6 < var5; ++var6) {
         String var7 = var4[var6];
         int var8 = this.levenshteinDistance(var1, var7);
         if (var8 < var3) {
            var3 = var8;
            var2 = var7;
         }
      }

      return var2;
   }

   private int levenshteinDistance(String var1, String var2) {
      int[][] var3 = new int[var1.length() + 1][var2.length() + 1];

      for(int var4 = 0; var4 <= var1.length(); ++var4) {
         for(int var5 = 0; var5 <= var2.length(); ++var5) {
            if (var4 == 0) {
               var3[var4][var5] = var5;
            } else if (var5 == 0) {
               var3[var4][var5] = var4;
            } else if (var1.charAt(var4 - 1) == var2.charAt(var5 - 1)) {
               var3[var4][var5] = var3[var4 - 1][var5 - 1];
            } else {
               var3[var4][var5] = 1 + Math.min(var3[var4 - 1][var5], Math.min(var3[var4][var5 - 1], var3[var4 - 1][var5 - 1]));
            }
         }
      }

      return var3[var1.length()][var2.length()];
   }

   public static void main(String[] var0) {
      Dictionary var1 = new Dictionary(new String[]{"cherry", "pineapple", "melon", "strawberry", "raspberry"});
      System.out.println(var1.findMostSimilar("strawbery"));
      System.out.println(var1.findMostSimilar("berry"));
      Dictionary var2 = new Dictionary(new String[]{"stars", "mars", "wars", "codec", "codewars"});
      System.out.println(var2.findMostSimilar("coddwars"));
      Dictionary var3 = new Dictionary(new String[]{"javascript", "java", "ruby", "php", "python", "coffeescript"});
      System.out.println(var3.findMostSimilar("heaven"));
      System.out.println(var3.findMostSimilar("javascript"));
   }
}
